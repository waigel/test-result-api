name: Build

on:
  push:
    branches: [ main, release ]
  pull_request:

jobs:
  frontend-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Add SHORT_SHA env property with commit short sha
        run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-7`" >> $GITHUB_ENV
      - name: Configure tolgee download api key
        run: echo "TOLGEE_DOWNLOAD_API_KEY=${{ secrets.TOLGEE_DOWNLOAD_API_KEY }}" >> $GITHUB_ENV
      - uses: actions/checkout@v2
      - name: Docker Login
        uses: docker/login-action@v2.0.0
        with:
          registry: testperfect.azurecr.io
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Build Docker image
        run: docker build ./frontend -f frontend.Dockerfile --tag testperfect.azurecr.io/testperfect/tra-ui:${SHORT_SHA} --build-arg=GIT_BRANCH=$(git rev-parse --abbrev-ref HEAD) --build-arg=GIT_COMMIT=${SHORT_SHA} --build-arg=TOLGEE_DOWNLOAD_API_KEY=${TOLGEE_DOWNLOAD_API_KEY}
      - name: Push Docker image
        run: docker push testperfect.azurecr.io/testperfect/tra-ui:${SHORT_SHA}
  backend-build:
    name: Build backend 🏗️
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Create log folder
        run: sudo mkdir -p /var/log/klexhub/testperfect && sudo chmod -R 777 /var/log/klexhub/testperfect

      - uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

      - name: Build backend
        run: ./gradlew bootJar

      - name: Tar build
        run: tar -czf ~/backend.tgz ./build

      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: backend
          path: |
            ~/backend.tgz

  backend-docker:
    name: Backend docker 🐬
    needs: [ backend-build ]
    runs-on: ubuntu-latest
    steps:
      - name: Add SHORT_SHA env property with commit short sha
        run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-7`" >> $GITHUB_ENV
      - uses: actions/checkout@v2
      - name: Create log folder
        run: sudo mkdir -p /var/log/klexhub/testperfect && sudo chmod -R 777 /var/log/klexhub/testperfect

      - name: Download backend build result
        uses: actions/download-artifact@v2
        with:
          name: backend
          path: ~/

      - name: Untar it
        run: |
          tar -xzf ~/backend.tgz ./build
      - name: Docker Login
        uses: docker/login-action@v2.0.0
        with:
          registry: testperfect.azurecr.io
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Build Docker image
        run: docker build . -f backend.Dockerfile --tag testperfect.azurecr.io/testperfect/tra-api:${SHORT_SHA} --build-arg=GIT_BRANCH=$(git rev-parse --abbrev-ref HEAD) --build-arg=GIT_COMMIT=${SHORT_SHA}
      - name: Push Docker image
        run: docker push testperfect.azurecr.io/testperfect/tra-api:${SHORT_SHA}
  deploy:
    name: Backend deploy 🚀
    needs: [ backend-docker, frontend-docker ]
    runs-on: ubuntu-latest
    steps:
      - name: Add SHORT_SHA env property with commit short sha
        run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-7`" >> $GITHUB_ENV
      - uses: actions/checkout@v3
        with:
          repository: testperfect/deployment
          ref: 'main'
          token:  ${{ secrets.ACTIONS_GITHUB_TOKEN }}
      - name: Setup GIT config
        run: |
          git config user.name "Klexy"
          git config user.email "klexy@klexhub.com"
      - name: Update .version file (Backend)
        run:  rm ./projects/dev/tra-api/.version && echo "export VERSION=${SHORT_SHA}" > ./projects/dev/tra-api/.version
      - name: Update .version file (Frontend)
        run:  rm ./projects/dev/tra-ui/.version && echo "export VERSION=${SHORT_SHA}" > ./projects/dev/tra-ui/.version
      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.KLEXY_GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.KLEXY_GPG_PRIVATE_KEY_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true
      - name: Commit version change
        run: |
          git add ./projects/dev/tra-api/.version
          git add ./projects/dev/tra-ui/.version
          git commit -s -S -m ":rocket: [tra-api/ui] Update version to ${SHORT_SHA}" -m "Co-authored-by: ${{ github.event.pusher.name }} <${{ github.event.pusher.email }}>"
          git push 
  cleanup:
    name: Cleanup 🧹
    runs-on: ubuntu-latest
    if: always()
    needs: [ backend-docker, deploy, backend-build]
    steps:
      - uses: geekyeggo/delete-artifact@v1
        with:
          name: backend
